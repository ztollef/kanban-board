{"version":3,"sources":["initial-data.js","components/task/Task.js","components/column/Column.js","components/add-task/Add-Task.js","App.js","index.js"],"names":["initialData","tasks","id","title","content","priority","type","owner","columns","taskIds","Task","props","draggableId","task","index","provided","snapshot","className","isDragging","ref","innerRef","draggableProps","dragHandleProps","style","fontWeight","Column","column","droppableId","isDraggingOver","droppableProps","map","key","handleChange","placeholder","AddTask","addTask","useState","taskId","setTaskId","taskOwner","setTaskOwner","taskDetails","setTaskDetails","taskPriority","setTaskPriority","taskTitle","setTaskTitle","taskType","setTaskType","onSubmit","e","preventDefault","value","onChange","target","App","setTasks","setColumns","onDragEnd","result","document","body","color","background","destination","source","start","find","finish","splice","newColumns","newTaskIds","columnTasks","console","log","newTask","newTasks","push","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ef39696f.chunk.js","sourcesContent":["import {v4 as uuidv4} from 'uuid';\r\n\r\nconst initialData = {\r\n  tasks: [\r\n    { id: 'task-1', title: 'JWT authentication bug', content: 'Getting a 404 error', priority: 'High', type: 'bug', owner: 'Zach'},\r\n    { id: 'task-2', title: 'Renew SSL certs', content: 'Use DigiCert for Certificate Authority', priority: 'High', type: 'DevOps', owner: 'Billy' },\r\n    { id: 'task-3', title: 'Update text on homepage', content: 'Refer to email from Beth', priority: 'High', type: 'maintanence', owner: 'Adesh' },\r\n    { id: 'task-4', title: 'Add photo gallery feature', content: 'Add photo gallery feature', priority: 'High', type: 'enhancement', owner: 'Marge' },\r\n],\r\n  columns : [\r\n    { id: 'column-1', title: 'Backlog', taskIds: ['task-1', 'task-3', ] },\r\n    { id: 'column-2', title: 'In progress', taskIds: [] },\r\n    { id: 'column-3', title: 'In review', taskIds: ['task-2']},\r\n    { id: 'column-4', title: 'Ready for release', taskIds: ['task-4']},\r\n  ],\r\n};\r\n\r\nexport default initialData;","import React from 'react';\r\nimport { Draggable } from 'react-beautiful-dnd';\r\nimport './task.css';\r\n\r\nconst Task = (props) => {\r\n\r\n    return (\r\n        <Draggable draggableId={props.task.id} index={props.index}>\r\n            {(provided, snapshot) => (\r\n                <div className={`task-container ${snapshot.isDragging ? 'active-task' : ''}`}\r\n                ref={provided.innerRef}\r\n                {...provided.draggableProps}\r\n                {...provided.dragHandleProps} \r\n                >\r\n                    <h4>{props.task.title}</h4>\r\n                    <p>{props.task.content}</p>\r\n                    <p><span style={{fontWeight: \"bold\"}}>Priority</span>: {props.task.priority}</p>\r\n                    <p><span style={{fontWeight: \"bold\"}}>Owner</span>: {props.task.owner}</p>\r\n                    <p><span style={{fontWeight: \"bold\"}}>Type</span>: {props.task.type}</p>\r\n                </div>\r\n            )\r\n            }\r\n        </Draggable>\r\n    )\r\n}\r\n\r\nexport default Task;\r\n","import React from 'react';\r\nimport Task from '../task/Task.js';\r\nimport {Droppable} from 'react-beautiful-dnd';\r\nimport './column.css';\r\n\r\nconst Column = (props) => {\r\n    return (\r\n        <div className=\"column-container\">\r\n            <div className=\"column-title\">{props.column.title}</div>\r\n            <Droppable droppableId={props.column.id}>\r\n                {(provided, snapshot) => \r\n                    <div className={`column-tasks ${snapshot.isDraggingOver ? 'active-column' : ''}`} ref={provided.innerRef} {...provided.droppableProps}>\r\n                        {props.tasks.map((task, index) => <Task key={task.id} task={task} index={index} handleChange={props.handleChange} />)}\r\n                        {provided.placeholder}\r\n                    </div>\r\n                }\r\n            </Droppable>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Column;\r\n","import React, { useState } from 'react';\r\nimport { v4 as uuidv4} from 'uuid';\r\n\r\nconst AddTask = ({ addTask }) => {\r\n    const [taskId, setTaskId] = useState('');\r\n    const [taskOwner, setTaskOwner] = useState('');\r\n    const [taskDetails, setTaskDetails] = useState('');\r\n    const [taskPriority, setTaskPriority] = useState('');\r\n    const [taskTitle, setTaskTitle] = useState('');\r\n    const [taskType, setTaskType] = useState('');\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        const newTaskId = taskTitle;\r\n        setTaskId(newTaskId);\r\n        if (!taskId || !taskDetails || !taskOwner) return;\r\n        addTask(taskId, taskTitle, taskDetails, taskPriority, taskOwner, taskType);\r\n    };\r\n  \r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n                type=\"text\" \r\n                value={taskTitle}\r\n                onChange={e => setTaskTitle(e.target.value)}\r\n                placeholder=\"Title\"\r\n            />\r\n            <input \r\n                type=\"text\" \r\n                value={taskDetails}\r\n                onChange={e => setTaskDetails(e.target.value)}\r\n                placeholder=\"Details\"\r\n            />\r\n            <input \r\n                type=\"text\" \r\n                value={taskPriority}\r\n                onChange={e => setTaskPriority(e.target.value)}\r\n                placeholder=\"Priority\"\r\n            />\r\n            <input \r\n                type=\"text\" \r\n                value={taskOwner}\r\n                onChange={e => setTaskOwner(e.target.value)}\r\n                placeholder=\"Owner\"\r\n            />\r\n            \r\n            <input \r\n                type=\"text\" \r\n                value={taskType}\r\n                onChange={e => setTaskType(e.target.value)}\r\n                placeholder=\"Type (bug, enhancement, other\"\r\n            />\r\n            <div>\r\n                <button type=\"submit\">Add Task</button>\r\n                <input type=\"reset\" />\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddTask;\r\n","import React, {useEffect, useState} from 'react';\nimport './App.css';\nimport initialData from './initial-data';\nimport Column from './components/column/Column';\nimport {DragDropContext} from 'react-beautiful-dnd';\n\nimport AddTaskForm from './components/add-task/Add-Task.js';\n\nfunction App() {\n\n  const [tasks, setTasks] = useState(initialData.tasks);\n  const [columns, setColumns] = useState(initialData.columns);\n\n  const onDragStart = () => {\n    document.body.style.color = 'orange';\n    document.body.style.transition = 'background-color 0.2s ease';\n  };\n\n  const onDragUpdate = update => {\n    const { destination } = update;\n    const opacity = destination ?\n      destination.index / Object.keys(tasks).length :\n      0;\n    document.body.style.backgroundColor = `rgba(153, 141, 217, ${opacity})`;\n  };\n\n  const onDragEnd = result => {\n    document.body.style.color = 'inherit';\n    document.body.style.background= 'inherit';\n    const { destination, source, draggableId } = result;\n\n    if (!destination) {\n      return;\n    }\n\n    if (destination.droppableId === source.droppableId && destination.index === source.index) {\n      return;\n    }\n\n    const start = columns.find(column => column.id===source.droppableId);\n    const finish = columns.find(column => column.id===destination.droppableId);\n\n    if (start === finish) {\n \n      const newTaskIds = start.taskIds;\n      newTaskIds.splice(source.index, 1);\n      newTaskIds.splice(destination.index, 0, draggableId);\n  \n      const newColumns = [...columns];\n    setColumns(newColumns);\n\n    return;\n    }\n\n    const startTaskIds = start.taskIds;\n    startTaskIds.splice(source.index, 1);\n\n    const finishTaskIds = finish.taskIds;\n    finishTaskIds.splice(destination.index, 0, draggableId);\n\n    const newColumns = [...columns];\n    setColumns(newColumns);\n  };\n\n  const addTask = (id, title, content, priority, owner, type) => {\n    const newTask = { id, title, content, priority, owner, type};\n    const newTasks = [...tasks, newTask];\n    const newColumns = [...columns];\n    newColumns[0].taskIds.push(newTask.id);\n    console.log(id);\n    setTasks(newTasks);\n    setColumns(newColumns);\n  };\n\n  const deleteTask = taskId => {\n    const newTasks = [];\n    const newColumns = [];\n  };\n    \n  return (\n    <DragDropContext onDragEnd={onDragEnd}>\n      <div className=\"columns-container\">\n        {columns.map(column => {\n          const columnTasks = column.taskIds.map(taskId => {\n            console.log(tasks);\n            return tasks.find(task => task.id===taskId);\n          })\n          return <Column key={column.id} column={column} tasks={columnTasks}/>\n        })}\n      </div> \n      <AddTaskForm addTask={addTask}/>\n    </DragDropContext>\n  );\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}